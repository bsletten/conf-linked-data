<?xml version="1.0" encoding="UTF-8"?>
<module version="2.0">
   <meta>
      <identity>
         <uri>urn:net:dataversity:conferences:data</uri>
         <version>1.0.0</version>
      </identity>
      <info>
         <name>Dataversity Conference Linked Data</name>
         <description>Linked Data Wrappers around Dataversity and Wilshire Conferences</description>
         <icon>res:/dv/pub/icon.png</icon>
      </info>
   </meta>
   <system>
      <dynamic/>
   </system>
   <rootspace name="Dataversity Conference Data" uri="urn:net:dataversity:conferences:data">
	   <fileset>
		   <regex>res:/etc/system/SimpleDynamicImportHook.xml</regex>
	   </fileset>
	   <fileset>
		   <regex>res:/resources/.*</regex>
	   </fileset>
	   <overlay>
		   <prototype>RESTOverlay</prototype>
		   <config>
			   <basepath>/</basepath>
			   <XXstrict/>
		   </config>
		   <space>
			   <mapper>
				   <config>res:/resources/mapper/restMapper.xml</config>
				   <space>
   					<import>
   						<private/>
   						<uri>urn:org:netkernel:xml:core</uri>
   					</import>
   					<import>
   						<uri>urn:org:netkernel:ext:layer1</uri>
   					</import>
   					<import>
   						<uri>urn:net:dataversity:conferences:data:impl</uri>
   					</import>
   					<import>
   						<uri>urn:org:netkernel:lang:groovy</uri>
   					</import>
   					<import>
   						<uri>urn:org:netkernel:client:http</uri>
   					</import>
					<import>
					  <uri>urn:org:netkernel:rdf:jena</uri>
					</import>
					<import>
						<uri>urn:org:netkernel:lang:xrl</uri>
					</import>
					<import>
					  <uri>urn:org:netkernel:web:core</uri>
					</import>
					<fileset>
						<regex>res:/resources/.*</regex>
					</fileset>
				   </space>
			   </mapper>
		   </space>
	   </overlay>
	   	<import>
	   		<private/>
	   		<uri>urn:org:netkernel:tpt:http</uri>
	   	</import>
	   	<fileset>
	   		<regex>res:/dv/pub/(.*)</regex>
	   		<rewrite>res:/resources/pub/$1</rewrite>
	   	</fileset>
   </rootspace>
   
   <rootspace name="Development Space" uri="urn:net:dataversity:conferences:data:impl">
<!--     <fileset>
         <regex>res:/etc/system/SimpleDynamicImportHook.xml</regex>
      </fileset> -->
      <mapper>
         <config>
            <endpoint>
               <id>urn::ExampleEndpoint</id>
               <name>Example Service</name>
               <description>Example Groovy service generated by New Module Wizard</description>
               <grammar>res:
                  <group name="service">/dv/service</group>/
                  <group name="value">
                     <regex type="anything"/>
                  </group>
               </grammar>
               <request>
                  <identifier>active:groovy</identifier>
                  <argument name="operator">res:/resources/endpoints/example.gy</argument>
                  <argument method="as-string" name="value">arg:value</argument>
               </request>
            </endpoint>
            <endpoint>
               <id>urn::SpeakerEndpoint</id>
               <name>Speaker Service</name>
               <description>Service to find all of the speakers</description>
               <grammar>res:
                  <group name="service">/dv/speaker</group>
               </grammar>
               <request>
                  <identifier>active:groovy</identifier>
                  <argument name="operator">res:/resources/endpoints/speaker.gy</argument>
               </request>
            </endpoint>
            <endpoint>
               <id>urn:net:dataversity:ResourceEndpoint</id>
               <name>Resource Endpoint</name>
               <description>Returns information about a named resource</description>
               <grammar>res:
                  <group name="service">/resource</group>/
				  <group name="resource">
					  <regex type="anything"/>
				  </group>
               </grammar>
               <request>
                  <identifier>active:groovy</identifier>
                  <argument name="operator">res:/resources/endpoints/resource.gy</argument>
				  <argument method="as-string" name="resource">arg:resource</argument>
               </request>
            </endpoint>
            <endpoint>
               <id>urn:net:dataversity:PageEndpoint</id>
               <name>Page Endpoint</name>
               <description>Returns HTML-renedered information about a named resource</description>
               <grammar>res:
                  <group name="service">/page</group>/
				  <group name="resource">
					  <regex type="anything"/>
				  </group>
               </grammar>
               <request>
                  <identifier>active:groovy</identifier>
                  <argument name="operator">res:/resources/endpoints/page.gy</argument>
				  <argument method="as-string" name="resource">arg:resource</argument>
               </request>
            </endpoint>
            <endpoint>
               <id>urn:net:dataversity:DataEndpoint</id>
               <name>Data Endpoint</name>
               <description>Returns serialized RDF about a named resource</description>
               <grammar>res:
                  <group name="service">/data</group>/
				  <group name="resource">
					  <regex type="anything"/>
				  </group>.rdf
               </grammar>
               <request>
                  <identifier>active:groovy</identifier>
                  <argument name="operator">res:/resources/endpoints/data.gy</argument>
				  <argument method="as-string" name="resource">arg:resource</argument>
               </request>
            </endpoint>
			<endpoint>
				<id>urn:net:dataversity:conferences</id>
				<name>Dataversity Conferences</name>
				<description>Convert a set of Dataversity Conferences into RDF</description>
				<grammar>
		            <active>
		                <identifier>active:dataversity-conferences</identifier>
		            </active>
				</grammar>
		        <request>
		            <identifier>active:groovy</identifier>
		            <argument name="operator">res:/resources/endpoints/conferences.gy</argument>
		        </request>
			</endpoint>
			<endpoint>
				<id>urn:net:dataversity:conference</id>
				<name>Dataversity Conference</name>
				<description>Convert a specific Dataversity Conference into RDF</description>
				<grammar>
		            <active>
		                <identifier>active:dataversity-conference</identifier>
						<argument name="confname">arg:confname</argument>
						<argument name="confid">arg:confid</argument>
						<argument name="year">arg:year</argument>
		            </active>
				</grammar>
		        <request>
		            <identifier>active:groovy</identifier>
		            <argument name="operator">res:/resources/endpoints/conference.gy</argument>
					<argument method="as-string" name="confname">arg:confname</argument>
					<argument method="as-string" name="confid">arg:confid</argument>
					<argument method="as-string" name="year">arg:year</argument>					
		        </request>
			</endpoint>
			<endpoint>
				<id>urn:net:dataversity:conference:raw</id>
				<name>Dataversity Conference Raw</name>
				<description>Fetch the Raw Representation of a conference</description>
				<grammar>
		            <active>
		                <identifier>active:dataversity-conference-raw</identifier>
						<argument name="confname">arg:confname</argument>
						<argument name="confid">arg:confid</argument>
						<argument name="year">arg:year</argument>
		            </active>
				</grammar>
		        <request>
		            <identifier>active:groovy</identifier>
		            <argument name="operator">res:/resources/endpoints/conference-raw.gy</argument>
					<argument method="as-string" name="confname">arg:confname</argument>
					<argument method="as-string" name="confid">arg:confid</argument>
					<argument method="as-string" name="year">arg:year</argument>					
		        </request>
			</endpoint>
			<endpoint>
				<id>urn:net:dataversity:conference:styled:resource:header</id>
				<name>Style Resource Header</name>
				<description>Return a styled header</description>
				<grammar>
		            <active>
		                <identifier>active:dataversity-styled-resource-header</identifier>
		            </active>
				</grammar>
		        <request>
		            <identifier>active:groovy</identifier>
		            <argument name="operator">res:/resources/endpoints/styled-header.gy</argument>
		        </request>
			</endpoint>
			<endpoint>
				<id>urn:net:dataversity:conference:styled:resource:properties</id>
				<name>Style Resource Properties</name>
				<description>Return a styled collection of properties</description>
				<grammar>
		            <active>
		                <identifier>active:dataversity-styled-resource-properties</identifier>
						<argument name="resource">arg:resource</argument>
		            </active>
				</grammar>
		        <request>
		            <identifier>active:groovy</identifier>
		            <argument name="operator">res:/resources/endpoints/styled-properties.gy</argument>
					<argument method="as-string" name="resource">arg:resource</argument>
		        </request>
			</endpoint>
			<endpoint>
				<id>urn:net:dataversity:conference:resource:model</id>
				<name>Resource Model</name>
				<description>Return a model containing statements about a resource</description>
				<grammar>
		            <active>
		                <identifier>active:dataversity-resource-model</identifier>
						<argument name="resource">arg:resource</argument>
		            </active>
				</grammar>
		        <request>
		            <identifier>active:groovy</identifier>
		            <argument name="operator">res:/resources/endpoints/resource-model.gy</argument>
					<argument method="as-string" name="resource">arg:resource</argument>
		        </request>
			</endpoint>
         </config>
         <space>
            <fileset>
               <regex>res:/resources/endpoints/.*</regex>
            </fileset>
            <fileset>
               <regex>res:/resources/conf/.*</regex>
            </fileset>
            <fileset>
               <regex>res:/resources/content/.*</regex>
            </fileset>
            <import>
               <uri>urn:org:netkernel:lang:groovy</uri>
            </import>
			<import>
				<uri>urn:org:netkernel:client:http</uri>
			</import>
			<import>
			  <uri>urn:org:netkernel:rdf:jena</uri>
			</import>
			<import>
				<uri>urn:org:netkernel:lang:xrl</uri>
			</import>
			<import>
			  <uri>urn:org:netkernel:tpt:http</uri>
			</import>
         </space>
      </mapper>
      <fileset><!--Icon-->
         <regex>res:/dv/pub/(.*)</regex>
         <rewrite>res:/resources/pub/$1</rewrite>
      </fileset>
   </rootspace>
   <rootspace name=" - Documentation Space" public="true" uri="urn::doc">
      <fileset>
         <regex>res:/etc/system/(Books|Docs).xml</regex>
      </fileset>
      <fileset>
         <regex>res:/resources/doc/.*</regex>
      </fileset>
   </rootspace>
   <rootspace name=" - Unit Test Space" public="true" uri="urn::test">
      <fileset>
         <regex>res:/etc/system/Tests.xml</regex>
      </fileset>
      <fileset>
         <regex>res:/resources/test/.*</regex>
      </fileset>
      <endpoint><!-- stop any configuration from module under test from polluting address space -->
         <prototype>Limiter</prototype>
         <grammar>res:/etc/
            <regex type="anything"/>
         </grammar>
      </endpoint>
      <import><!-- import the main space which we are testing -->
         <uri>urn:</uri>
      </import>
      <import>
         <uri>urn:org:netkernel:ext:layer1</uri>
         <private/>
      </import>
   </rootspace>
</module>